---
name: Update Latest Release Versions Nightly
permissions:
  contents: write
  pull-requests: write
on:
  schedule:
    - cron: '25 9 * * *' # runs every day at 09:25 UTC
  workflow_dispatch:
    inputs:
      repository_override:
        description: "GitHub repository to fetch the released versions from"
        type: string

jobs:
  fetch-latest-releases:
    name: Fetch Latest Releases
    runs-on: ubuntu-latest
    outputs:
      releases: ${{ steps.releases.outputs.list }}
    steps:
      - id: date
        run: |
          echo "two_days_ago=$(date +%Y-%m-%d'T'%T --date='2 days ago')" >> "$GITHUB_OUTPUT"
      - id: releases
        env:
          GH_TOKEN: ${{ github.token }}
          REPOSITORY_OVERRIDE: ${{ inputs.repository_override }}
        run: |
          echo gh release list \
                  --repo "${REPOSITORY_OVERRIDE:-"etcd-io/etcd"}" \
                  --json 'tagName,publishedAt' \
                  --jq '[map(select(.publishedAt > "'${{ steps.date.outputs.two_days_ago }}'")) | .[] | .tagName] | reverse'
          echo "list=$(\
                gh release list \
                  --repo "${REPOSITORY_OVERRIDE:-"etcd-io/etcd"}" \
                  --json 'tagName,publishedAt' \
                  --jq '[map(select(.publishedAt > "'${{ steps.date.outputs.two_days_ago }}'")) | .[] | .tagName] | reverse' \
                  )" >> "$GITHUB_OUTPUT"

  update-release:
    name: Update Release
    runs-on: ubuntu-latest
    needs: fetch-latest-releases
    strategy:
      matrix:
        release: ${{ fromJSON(needs.fetch-latest-releases.outputs.releases) }}
      max-parallel: 1
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4
      - env:
          GH_TOKEN: ${{ github.token }}
        run: |
          make update-release-version LATEST_VERSION="${{ matrix.release }}"
